// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFlix.Dados.Cofiguracao;

#nullable disable

namespace MyFlix.Dados.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250813005811_Inition")]
    partial class Inition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MyFlix.Dados.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Assistido")
                        .HasColumnType("BIT")
                        .HasColumnName("Assistido");

                    b.Property<int>("Nota")
                        .HasColumnType("INT")
                        .HasColumnName("Nota");

                    b.HasKey("Id");

                    b.ToTable("Avaliacao", (string)null);
                });

            modelBuilder.Entity("MyFlix.Dados.Entidades.Filmes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AnoLancamento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("AnoLancamento");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("INT")
                        .HasColumnName("AvaliacaoId");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataCadastro");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Genero");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.ToTable("Filmes", (string)null);
                });

            modelBuilder.Entity("MyFlix.Dados.Entidades.Filmes", b =>
                {
                    b.HasOne("MyFlix.Dados.Entidades.Avaliacao", "Avaliacao")
                        .WithMany()
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");
                });
#pragma warning restore 612, 618
        }
    }
}
